name: Code Quality, Deployment

on:
  push:
    branches:
      - main # Trigger for main branch
defaults:
  run:
    working-directory: app

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, intl, dom, xml, xmlwriter, pdo_pgsql
          coverage: none
          ini-values: memory_limit=-1

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: composer-${{ hashFiles('app/composer.lock') }}
          restore-keys: composer-

      - name: Assert composer.json exist
        run: test -f composer.json || { echo "::error ::app/composer.json is missing"; exit 1; }

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run PHPStan
        run: |
          if [ -x "vendor/bin/phpstan" ]; then
            vendor/bin/phpstan analyse --no-progress
          else
            echo "::warning ::phpstan is missing (require-dev) – step skipped"
          fi

      - name: Run PHPCS
        run: |
          if [ -x "vendor/bin/phpcs" ]; then
            vendor/bin/phpcs
          else
            echo "::warning ::phpcs is missing (require-dev) – step skipped"
          fi

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '1'

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Known hosts
        run: |
          ssh-keyscan -p "${{ secrets.SSH_PORT }}" "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      - name: Sanity check (rsyncignore present)
        run: |
          test -f .rsyncignore || (echo "Missing .rsyncignore at repo root" && exit 1)
          echo "Found .rsyncignore:"
          sed -n '1,80p' .rsyncignore

      - name: Rsync code to server (to release/)
        run: |
          rsync -az --delete \
          --exclude-from=.rsyncignore \
          -e "ssh -p ${{ secrets.SSH_PORT }}" \
          ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.REMOTE_PATH }}/release/

      - name: Link shared files & folders
        run: |
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
            ln -sfn ${REMOTE}/shared/.env.local ${REMOTE}/release/.env.local && \
            mkdir -p ${REMOTE}/release/var && \
            ln -sfn ${REMOTE}/shared/var ${REMOTE}/release/var && \
            mkdir -p ${REMOTE}/release/public/uploads && \
            ln -sfn ${REMOTE}/shared/public/uploads ${REMOTE}/release/public/uploads \
          "
        env:
          REMOTE: ${{ secrets.REMOTE_PATH }}

      - name: Install composer deps (prod, no-dev)
        run: |
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
            cd ${REMOTE}/release && \
            ${PHP_BIN:-php} -v &&\
            ${COMPOSER_BIN:-composer} install --no-dev --prefer-dist --no-interaction --optimize-autoloader \
          "
        env:
          REMOTE: ${{ secrets.REMOTE_PATH }}
          PHP_BIN: ${{ secrets.PHP_BIN }}
          COMPOSER_BIN: ${{ secrets.COMPOSER_BIN }}

      - name: Symfony cache warmup & perms
        run: |
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
            cd ${REMOTE}/release && \
            APP_ENV=prod ${PHP_BIN:-php} bin/console cache:clear --no-warmup && \
            APP_ENV=prod ${PHP_BIN:-php} bin/console cache:warmup && \
            chmod -R u+rwX,g+rwX var \
          "
        env:
          REMOTE: ${{ secrets.REMOTE_PATH }}
          PHP_BIN: ${{ secrets.PHP_BIN }}

      - name: Switch current -> release (atomic)
        run: |
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
            ln -sfn ${REMOTE}/release ${REMOTE}/current \
          "
        env:
          REMOTE: ${{ secrets.REMOTE_PATH }}
